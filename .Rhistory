geom_area(data = filter(t_dist, variable == 'upper'), fill = 'blue') +
geom_text(x=-3, y=0.4, label="Critical Value") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25)) +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F)) +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
geom_text(x=-3, y=0.4, label="Critical Value") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue') +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue') +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
geom_text(x=-3, y=0.4, label="Critical Value") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "jagged") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue') +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
geom_text(x=-3, y=0.4, label="Critical Value") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue') +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
geom_text(x=-3, y=0.4, label="Critical Value") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
geom_text(x=-3, y=0.4, label="Critical Value") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3, y = 0.4, label = "Lower cutoff, $T_1$", parse = TRUE)
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3, y = 0.4, label = "Lower cutoff, T_1", parse = TRUE)
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3, y = 0.4, label = "Lower cutoff, T_1", parse = TRUE) +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3, y = 0.4, label = "Lower cutoff T_1", parse = TRUE) +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3, y = 0.4, label = "Lower cutoff", parse = TRUE) +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3, y = 0.4, label = "Lower cutoff") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 2.8, y = 0.4, label = "Upper cutoff") +
annotate("text", x = -3, y = 0.4, label = "Lower cutoff") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 2.8, y = 0.4, label = "Upper cutoff") +
annotate("text", x = -2.8, y = 0.4, label = "Lower cutoff") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 2.8, y = 0.4, label = "Upper cutoff") +
annotate("text", x = -2.8, y = 0.4, label = "Lower cutoff") +
ylab("Density") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 2.8, y = 0.4, label = "Upper cutoff - 0.025% lies to the right") +
annotate("text", x = -2.8, y = 0.4, label = "Lower cutoff") +
ylab("Density") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 2.8, y = 0.4, label = "Upper cutoff - 0.025% \linebreak lies to the right") +
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 2.8, y = 0.4, label = "Upper cutoff - 0.025% \linebreak lies to the right", parse=T) +
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 2.8, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -2.8, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -3, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
t_dist <- data.frame(t=seq(-4, 4, length.out = 1000),
p=dt(seq(-4, 4, length.out = 1000), 25)) %>%
mutate(variable = case_when(
(t <= qt(0.025, 25)) ~ "lower",
(t>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = t,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3.2, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -3.2, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
blogdown:::serve_site()
knitr::opts_chunk$set(collapse = TRUE)
options(knitr.table.format = "html")
library(tidyverse)
Z_dist <- data.frame(Z=seq(-4, 4, length.out = 1000),
p=dz(seq(-4, 4, length.out = 1000))) %>%
mutate(variable = case_when(
(Z <= qt(0.025, 25)) ~ "lower",
(Z>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
Z_dist <- data.frame(Z=seq(-4, 4, length.out = 1000),
p=dnorm(seq(-4, 4, length.out = 1000))) %>%
mutate(variable = case_when(
(Z <= qt(0.025, 25)) ~ "lower",
(Z>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(t_dist, aes(x = Z,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3.2, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -3.2, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
Z_dist <- data.frame(Z=seq(-4, 4, length.out = 1000),
p=dnorm(seq(-4, 4, length.out = 1000))) %>%
mutate(variable = case_when(
(Z <= qt(0.025, 25)) ~ "lower",
(Z>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(Z_dist, aes(x = Z,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(t_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(t_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3.2, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -3.2, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
Z_dist <- data.frame(Z=seq(-4, 4, length.out = 1000),
p=dnorm(seq(-4, 4, length.out = 1000))) %>%
mutate(variable = case_when(
(Z <= qt(0.025, 25)) ~ "lower",
(Z>=qt(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(Z_dist, aes(x = Z,
y = p)) +
geom_line() +
geom_vline(xintercept = qt(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qt(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(Z_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(Z_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3.2, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -3.2, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
Z_dist <- data.frame(Z=seq(-4, 4, length.out = 1000),
p=dnorm(seq(-4, 4, length.out = 1000))) %>%
mutate(variable = case_when(
(Z <= qnorm(0.025, 25)) ~ "lower",
(Z>=qnorm(0.025, 25, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(Z_dist, aes(x = Z,
y = p)) +
geom_line() +
geom_vline(xintercept = qnorm(0.025, 25), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qnorm(0.025, 25, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(Z_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(Z_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3.2, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -3.2, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
Z_dist <- data.frame(Z=seq(-4, 4, length.out = 1000),
p=dnorm(seq(-4, 4, length.out = 1000))) %>%
mutate(variable = case_when(
(Z <= qnorm(0.025)) ~ "lower",
(Z>=qnorm(0.025, lower.tail = F)) ~ "upper",
TRUE ~ NA_character_))
ggplot(Z_dist, aes(x = Z,
y = p)) +
geom_line() +
geom_vline(xintercept = qnorm(0.025), color='lightblue', linetype = "dashed") +
geom_vline(xintercept = qnorm(0.025, lower.tail = F), color='lightblue', linetype = "dashed") +
geom_area(data = filter(Z_dist, variable == 'lower'), fill = 'lightblue') +
geom_area(data = filter(Z_dist, variable == 'upper'), fill = 'lightblue') +
annotate("text", x = 3.2, y = 0.4, label = "Upper cutoff - 0.025%") +
annotate("text", x = -3.2, y = 0.4, label = "Lower cutoff - 0.025%") +
ylab("Density") +
theme_classic()
?seq
theta <- seq(from = -2, to = 2, length.out = 100)
power <- pnorm(-1.96+theta*sqrt(25)) + 1 - pnorm(1.96-theta*sqrt(25)) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power
power <- pnorm(-1.96+theta*sqrt(25)) + (1 - pnorm(1.96-theta*sqrt(25))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power
round(power, 3)
d <- (1 - pnorm(1.96-theta*sqrt(25)))
round(d, 3)
pnorm(1.96-theta*sqrt(25), lower.tail = F)
pnorm(1.96-theta*sqrt(25), lower.tail = T)
pwr <- pnorm(-1.96+theta*sqrt(25)) + pnorm(1.96-theta*sqrt(25), lower.tail = T)
round(pwr, 3)
sqrt(25))
sqrt(25)
power <- pnorm(-1.96+(theta/(1/sqrt(25)))) + (1 - pnorm(1.96-(theta/(1/sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power <- pnorm(-1.96+(theta/(1/sqrt(25)))) + 1 - pnorm(1.96-(theta/(1/sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power <- pnorm(-1.96+(theta/(1/sqrt(25)))) + 1 - pnorm(1.96-(theta/(1/sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
round(power, 3)
power <- dnorm(-1.96+(theta/(1/sqrt(25)))) + 1 - dnorm(1.96-(theta/(1/sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
round(power, 3)
power <- pnorm(-1.96+(theta/(1/sqrt(25)))) + (1 - pnorm(1.96-(theta/(1/sqrt(25))))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
round(power, 3)
power <- pnorm(-1.96+(theta*sqrt(25)) + (1 - pnorm(1.96-(theta*sqrt(25)) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power <- pnorm(-1.96+(theta*sqrt(25))) + (1 - pnorm(1.96-(theta*sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power <- pnorm(-1.96+(theta*sqrt(25))) + (1 - pnorm(1.96-(theta*sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power <- pnorm(-1.96+(theta*sqrt(25)), lower.tail = T) + (1 - pnorm(1.96-(theta*sqrt(25)), lower.tail = T)) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
round(power, 3)
power
pnorm(-1.96+(theta*sqrt(25)), lower.tail = T)
power <- 1 - pnorm(-1.96+(theta*sqrt(25))) + (pnorm(1.96-(theta*sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power
power <- pnorm(-1.96+(theta*sqrt(25))) + 1 - (pnorm(1.96-(theta*sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power
power <- pnorm(-1.96+(theta*sqrt(25))) + (pnorm(1.96-(theta*sqrt(25)))) # Note that I just flipped the denominator of the denominator and since sd is one we don't have a fraction anymore
power
powerL <- pnorm(-1.96+(theta*sqrt(25))) +
powerU <- 1- (pnorm(1.96-(theta*sqrt(25))))
powerL <- pnorm(-1.96+(theta*sqrt(25)))
powerU <- 1- (pnorm(1.96-(theta*sqrt(25))))
powerU
pnorm(-1.96+2*5)
powerL <- pnorm((theta*sqrt(25)))
powerU <- 1- (pnorm((theta*sqrt(25))))
powerL
powerL <- dnorm(-1.96+(theta*sqrt(25)))
powerL
powerU <- 1- (dnorm(1.96-(theta*sqrt(25))))
powerU
powerU <- dnorm(1.96-(theta*sqrt(25)), )
powerU
powerU <- dnorm(1.96-(theta*sqrt(25)))
powerU
powerU <- dnorm(1.96-(theta*sqrt(25)))
powerU
round(powerU, 3)
powerL
round(powerL)
round(powerL, 4)
powerU <- 1 - dnorm(1.96-(theta*sqrt(25)))
round(powerU, 3)
power <- powerL + powerU
power
powerL <- dnorm((theta-1.96)*sqrt(25))
powerL
round(powerL)
round(powerL, 4)
powerU <- 1 - dnorm((1.96-theta)*sqrt(25)))
powerU <- 1 - dnorm((1.96-theta)*sqrt(25))
powerU
powerL <- dnorm(-1.96+(theta*sqrt(25)), mean = theta)
powerU <- 1 - dnorm((1.96-theta)*sqrt(25), mean = theta)
power <- powerL + powerU
power
powerU <- pnorm((1.96-theta)*sqrt(25), lower.tail = FALSE)
powerU
round(powerU, 8)
powerL <- pnorm(-1.96+(theta*sqrt(25)))
round(powerL, 8)
powerL <- pnorm((-1.96+theta)*sqrt(25)))
powerL <- pnorm((-1.96+theta)*sqrt(25))
round(powerL, 8)
powerL <- pnorm((-1.96+theta)*sqrt(25))
round(powerL, 8)
powerL <- pnorm((-1.96-theta)*sqrt(25))
powerU <- pnorm((1.96-theta)*sqrt(25), lower.tail = FALSE)
power <- powerL + powerU
power
round(power, 5)
power <- pnorm((-1.96-theta)*sqrt(25)) + (1-pnorm((1.96-theta)*sqrt(25)))
power
round(power, 5)
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = pnorm((-1.96-theta)*sqrt(25)) + (1-pnorm((1.96-theta)*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = dnorm((-1.96-theta)*sqrt(25)) + (1-dnorm((1.96-theta)*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = pnorm((-1.96-theta)*sqrt(25)) + (1-pnorm((1.96-theta)*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line()
blogdown:::serve_site()
blogdown:::serve_site()
