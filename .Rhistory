round(powerL)
round(powerL, 4)
powerU <- 1 - dnorm(1.96-(theta*sqrt(25)))
round(powerU, 3)
power <- powerL + powerU
power
powerL <- dnorm((theta-1.96)*sqrt(25))
powerL
round(powerL)
round(powerL, 4)
powerU <- 1 - dnorm((1.96-theta)*sqrt(25)))
powerU <- 1 - dnorm((1.96-theta)*sqrt(25))
powerU
powerL <- dnorm(-1.96+(theta*sqrt(25)), mean = theta)
powerU <- 1 - dnorm((1.96-theta)*sqrt(25), mean = theta)
power <- powerL + powerU
power
powerU <- pnorm((1.96-theta)*sqrt(25), lower.tail = FALSE)
powerU
round(powerU, 8)
powerL <- pnorm(-1.96+(theta*sqrt(25)))
round(powerL, 8)
powerL <- pnorm((-1.96+theta)*sqrt(25)))
powerL <- pnorm((-1.96+theta)*sqrt(25))
round(powerL, 8)
powerL <- pnorm((-1.96+theta)*sqrt(25))
round(powerL, 8)
powerL <- pnorm((-1.96-theta)*sqrt(25))
powerU <- pnorm((1.96-theta)*sqrt(25), lower.tail = FALSE)
power <- powerL + powerU
power
round(power, 5)
power <- pnorm((-1.96-theta)*sqrt(25)) + (1-pnorm((1.96-theta)*sqrt(25)))
power
round(power, 5)
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = pnorm((-1.96-theta)*sqrt(25)) + (1-pnorm((1.96-theta)*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = dnorm((-1.96-theta)*sqrt(25)) + (1-dnorm((1.96-theta)*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = pnorm((-1.96-theta)*sqrt(25)) + (1-pnorm((1.96-theta)*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line()
blogdown:::serve_site()
blogdown:::serve_site()
knitr::opts_chunk$set(collapse = TRUE)
options(knitr.table.format = "html")
library(tidyverse)
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
library(tidyverse)
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100),
power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line()
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
xlab("\theta", parse = TRUE)
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
xlab("&theta;")
blogdown:::serve_site()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
xlab("&theta;")
blogdown:::serve_site()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
xlab(expression(paste(theta)))
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
xlab(expression(paste(theta)), size=2)
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
annotate(geom = "text", label = "$\alpha$", parse = TRUE)
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
annotate(geom = "text", x = 0.3, y = 0.08, label = "$\alpha$", parse = TRUE)
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
annotate(geom = "text", x = 0.3, y = 0.08, label = "$\alpha$")
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
annotate(geom = "text", x = 0.3, y = 0.08, label = "Value~is~sigma~R^{2}==0.6 ") +
theme_classic()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
annotate(geom = "text", x = 0.3, y = 0.08, label = "Value~is~sigma~R^{2}==0.6 ", parse = T) +
theme_classic()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T) +
theme_classic()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "lightblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -2, to = 2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "lightblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.5, to = 1.5, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "lightblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "lightblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "lightblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darktblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line() +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue") +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue", size = 1) +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue", size = 12) +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue", size = 5) +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue", size = 6) +
theme_classic()
power_data <- data.frame(theta = seq(from = -1.2, to = 1.2, length.out = 100)) %>%
mutate(power = pnorm(-1.96-theta*sqrt(25)) + (1-pnorm(1.96-theta*sqrt(25))))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08, label = "alpha", parse = T, color = "darkblue", size = 5) +
theme_classic()
before <- rnorm(n = 25, mean = 0, sd = 1)
after <- rnorm(n = 25, mean = 0.5, sd = 1)
z <- (after - before)*sqrt(length(before))
z <- mean(after - before)*sqrt(length(before))
p <- pnorm(z)
p <- dnorm(z)
group1 <- rnorm(n = 25, mean = 0, sd = 1)
group2 <- rnorm(n = 25, mean = 0.5, sd = 1)
t.test(group1, group2,
alternative = "two.sided",
paired = FALSE)
t_test <- t.test(group1, group2,
alternative = "two.sided",
paired = FALSE)
View(t_test)
power_sim <- function (nsim, theta, n1, n2) {
ranmat <- matrix(rnorm((n1 + n2) * nsim),
nrow = nsim,
ncol = n1 + n2)
ranmat<-  apply(X = ranmat, MARGIN =  1,
function(x) x[1:n1] + theta[i]
)
p_val <- apply(X = ranmat, MARGIN =  1,
function(x) t.test(x = x[1:n1], y = x[n1+1:n1+n2],
alternative = "two.sided",
paired = FALSE)[["p.value"]]
)
power <- (p_val < 0.05)/length(p_val)
return(power)
}
power_sim(50, 0.5, 25, 25)
power_sim <- function (nsim, theta, n1, n2) {
ranmat <- matrix(rnorm((n1 + n2) * nsim),
nrow = nsim,
ncol = n1 + n2)
ranmat<-  apply(X = ranmat, MARGIN =  1,
function(x) x[1:n1] + theta
)
p_val <- apply(X = ranmat, MARGIN =  1,
function(x) t.test(x = x[1:n1], y = x[n1+1:n1+n2],
alternative = "two.sided",
paired = FALSE)[["p.value"]]
)
power <- (p_val < 0.05)/length(p_val)
return(power)
}
power_sim(50, 0.5, 25, 25)
nsim=50
theta=0.5
n1=25
n2=25
ranmat <- matrix(rnorm((n1 + n2) * nsim),
nrow = nsim,
ncol = n1 + n2)
View(ranmat)
ranmat<-  apply(X = ranmat, MARGIN =  1,
function(x) x[1:n1] + theta
)
View(ranmat)
mean(ranmat[1:25])
mean(ranmat[26:50])
theta =2
ranmat <- matrix(rnorm((n1 + n2) * nsim),
nrow = nsim,
ncol = n1 + n2)
ranmat<-  apply(X = ranmat, MARGIN =  1,
function(x) x[1:n1] + theta
)
mean(ranmat[1:25])
mean(ranmat[26:50])
ranmat <-  apply(ranmat, MARGIN =  1,
function(x) x[1:n1] + theta
)
ranmat <- matrix(rnorm((n1 + n2) * nsim),
nrow = nsim,
ncol = n1 + n2)
ranmat <-  apply(ranmat, MARGIN =  1,
function(x) x[1:n1] + theta
)
mean(ranmat[1:25])
mean(ranmat[26:50])
sim_mat <- cbind(matrix(rnorm(n1*nsim, mean = theta, sd=1),
nrow = nsim,
ncol = n1),
matrix(rnorm(n2*nsim, mean = 0, sd=1),
nrow = nsim,
ncol = n2))
mean(ranmat[1:50, 1:26])
View(ranmat)
sim_mat[1:50, 1:25]
mean(sim_mat[1:50, 1:25])
mean(sim_mat[1:50, 26:50])
p_val <- apply(X = sim_mat, MARGIN =  1,
function(x) t.test(x = x[1:n1], y = x[n1+1:n1+n2],
alternative = "two.sided",
paired = FALSE)[["p.value"]]
)
p_val <- apply(X = sim_mat, MARGIN =  1,
function(x) t.test(x = x[1:25], y = x[26:50],
alternative = "two.sided",
paired = FALSE)[["p.value"]]
)
power <- (p_val < 0.05)/length(p_val)
power <- length(p_val < 0.05)/length(p_val)
p_val <- apply(X = sim_mat, MARGIN =  1,
function(x) t.test(x = x[1:n1], y = x[(n1+1):(n1+n2)],
alternative = "two.sided",
paired = FALSE)[["p.value"]]
)
power <- length(p_val < 0.05)/length(p_val)
return(power)
power
theta =0.2
sim_mat <- cbind(matrix(rnorm(n1*nsim, mean = theta, sd=1),
nrow = nsim,
ncol = n1),
matrix(rnorm(n2*nsim, mean = 0, sd=1),
nrow = nsim,
ncol = n2))
p_val <- apply(X = sim_mat, MARGIN =  1,
function(x) t.test(x = x[1:n1], y = x[(n1+1):(n1+n2)],
alternative = "two.sided",
paired = FALSE)[["p.value"]]
)
power <- length(p_val < 0.05)/length(p_val)
power
[p_val < 0.05]
p_val < 0.05
sum(p_val < 0.05)
power <- sum(p_val < 0.05)/length(p_val)
power_sim <- function (nsim, theta, n1, n2) {
sim_mat <- cbind(matrix(rnorm(n1*nsim, mean = theta, sd=1),
nrow = nsim,
ncol = n1),
matrix(rnorm(n2*nsim, mean = 0, sd=1),
nrow = nsim,
ncol = n2))
p_val <- apply(X = sim_mat, MARGIN =  1,
function(x) t.test(x = x[1:n1], y = x[(n1+1):(n1+n2)],
alternative = "two.sided",
paired = FALSE)[["p.value"]]
)
power <- sum(p_val < 0.05)/length(p_val)
return(power)
}
power_sim(50, 0.5, 25, 25)
power_sim(50, 0.5, 25, 25)
power_sim(50, 0.5, 25, 25)
power <- 0
theta <- seq(from = -1.2, to = 1.2, length.out = 50)
for (i in 1:length(theta)) {
power[i] <- power_sim(50, theta[i], 25, 25)
}
power
power_over_theta <- cbind(power, theta)
power_data <- cbind(power, theta)
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08,
label = "alpha",
parse = T,
color = "darkblue",
size = 5) +
theme_classic()
power_data <- as.data.frame(cbind(power, theta))
ggplot(power_data, aes(x= theta, y=power)) +
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
annotate(geom = "text", x = 0.3, y = 0.08,
label = "alpha",
parse = T,
color = "darkblue",
size = 5) +
theme_classic()
blogdown:::new_post_addin()
knitr::opts_chunk$set(collapse = TRUE)
options(knitr.table.format = "html")
library(tidyverse)
theta <- seq(from = -1.2, to = 1.2, length.out = 50)
power <- 0
for (i in 1:length(theta)) {
power[i] <- power_sim(nsim = 10000, theta[i], n1 = 25, n2 = 25)
}
power_data <- as.data.frame(cbind(power, theta))
save(power_data, file = "10000_pwr.Rdata")
theta <- seq(from = -1.2, to = 1.2, length.out = 50)
power <- 0
for (i in 1:length(theta)) {
power[i] <- power_sim(nsim = 10000, theta[i], n1 = 50, n2 = 50)
}
power_data <- as.data.frame(cbind(power, theta))
save(power_data, file = "pwr_10k_n100.Rdata")
load("pwr_10k_n100.Rdata")
ggplot(power_data, aes(x= theta, y=power)) +  # Plotting power over theta, just as we did analytically
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
title("n1 = n2 = 50") +
annotate(geom = "text", x = 0.3, y = 0.08,
label = "alpha",
parse = T,
color = "darkblue",
size = 5) +
theme_classic()
load("pwr_10k_n100.Rdata")
ggplot(power_data, aes(x= theta, y=power)) +  # Plotting power over theta, just as we did analytically
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
title("n1 = n2 = 50") +
annotate(geom = "text", x = 0.3, y = 0.08,
label = "alpha",
parse = T,
color = "darkblue",
size = 5) +
theme_classic()
load("pwr_10k_n100.Rdata")
ggplot(power_data, aes(x= theta, y=power)) +  # Plotting power over theta, just as we did analytically
geom_line(size=1) +
geom_hline(yintercept = 0.05, linetype ="dashed", color = "darkblue") +
geom_vline(xintercept = 0) +
xlab(expression(paste(theta))) +
ylab("Power") +
ggtitle("n1 = n2 = 50") +
annotate(geom = "text", x = 0.3, y = 0.08,
label = "alpha",
parse = T,
color = "darkblue",
size = 5) +
theme_classic()
theta <- seq(from = -1.2, to = 1.2, length.out = 50)
power <- 0
for (i in 1:length(theta)) {
power[i] <- power_sim(nsim = 10000, theta[i], n1 = 75, n2 = 75)
}
power_data <- as.data.frame(cbind(power, theta))
save(power_data, file = "pwr_10k_n150.Rdata")
